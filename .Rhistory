set.seed(1)
x <- rpois(5,2)
x
?set.seed
?rpois
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
?system.time
x <- c(1,3, 6, 8, 11)
y <- c(-4, -7, -11, -20, -22)
fit <- lm(y ~ x)
fit
summary(fit)
install.packages("swirl")
library("swirl")
ls
ls()
rm(fit)
ls90
ls()
rm(x)
rm(y)
swirl()
swirl()
install.packages("UsingR")
swirl()
library("UsingR")
install.packages("UsingR")
library("UsingR")
install.packages("tcltk")
swirl()
install.packages("swirl")
library("swirl")
rm(fit)
rm(x)
rm(y)
swirl()
install.packages("~/Downloads/UsingR_2.0-1.tar", repos = NULL)
library("UsingR")
install.packages("UsingR")
library("UsingR")
install.packages("tcltk2")
library("UsingR")
install.packages("tcltk2")
library("tcltk2")
install.packages("X11")
install.packages("UsingR")
library("UsingR")
swirl()
install.packages("swirl")
library("swirl")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = 'red')
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varEst)
efit <- lm(acce ~ mag+dist, attenu)
efit <- lm(accel ~ mag + dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
head(galton)
datasets(mtcars)
data(mtcars)
mtcars
head(mtcars)
cyl4 <- subset(mtcars, cyl == 4)
cyl4
cyl68 <- subset(mtcars, cyl>4)
cyl68
?sort
?order
ordercyl68 <- order(cyl68, cyl68$cyl)
ghostmpg <- mtcars
for (i in 2:11) {
ghostmpg[i]<-mtcars$mpg
}
lotsa <- cor(ghostmpg, mtcars)
lotsa[1:11]
lotsa
ghostmpg <- mtcars
for (i in 2:11) {
ghostmpg[i]<-mtcars$mpg
}
lotsa <- cor(ghostmpg, mtcars)
correlations <- lotsa$mpg
correlations
names(correlations) <- names(mtcars)
correlations
lotsa[[1:11]]
str(lotsa)
lotsa[1:11,]
lotsa[1,]
lotsa <- cor(ghostmpg, mtcars)
correlations <- lotsa[1,]
correlations
setwd("~/Documents/coursera-R/rprog-data-ProgAssignment3-data/HospitalQualityProject")
getwd()
outData <- read.csv("./outcome-of-care-measures.csv", colClasses = "character")
resVector <- outData[,11]
str(resVector)
?aggregate
test <- data.frame(c("AL", "WA", "AL", "WA"), c("Harry", "Potter", "Ron", "Weasley"), c(4, 3, 5,1))
test
names(test) <- c("states", "handles", "numbers")
test
?order
test <- cbind(test$numbers, test$handles, test$states)
test
numbers <- c(4, 3, 5, 1)
handles <- c("Harry", "Potter", "Ron", "Weasley")
states <- c("AL", "WA", "AL", "WA")
test <- data.frame(numbers, handles, states)
test
newtest <- order(test)
newtest
a <- order(numbers)
a
numberes
numbers
a <- numbers[order(numbers)]
a
newtest <- test[order(test$numbers),]
newtest
test
?rnorm
vec1 <- rnorm(10, 2, 5)
vec2 <- rnorm(10, 10, 3)
vec3 <- c("B", "q", "u", "l", "cat", "monkey", "apple", "oo", "p", "rr")
test2 <- data.frame(vec1, vec2, vec3)
test2
newtest2 <- test2[order(test2$vec1, test2$vec3),]
newtest2
newtest3 <- test2[order(test2$vec3),]
newtest3
test2$vec3 <- c(rep("cat", 4), rep("ant", 3), rep("bog", 3))
test2
newtest2 <- test2[order(test2$vec3), ]
newtest2
split2 <- split(newtest2, as.factor(newtest2$vec3))
split2
str(split2)
names(split2)
sortedsplit2 <- sapply(names(split2), function(i) {
split2$i <- split2$i[(order(split2$i$vec1),]}
sortedsplit2 <- sapply(names(split2), function(i) {
split2$i <- split2$i[(order(split2$i$vec1),]})
wonder <- split2$bog[order(split2$bog$vec1),]
wonder
split2$bog
?sapply
newtest3 <- sapply(names(split2, function(i) {
split2$i[order(split2$i$vec1),]
})
}
newtest3 <- sapply(names(split2), function(i) {
split2$i[order(split2$i$vec1),]
})
names(split2)
newtest3 <- sapply(as.character(names(split2)), function(i) {
split2$i[order(split2$i$vec1),]
})
split2
length(split2)
newtest3 <- sapply(1:3, function(i) {
split2[i][order(split2[i]$vec1),] })
split2[1]
str(split2[1])
newtest3 <- sapply(1:3, function(i) {
as.data.frame(split2[i])[order(as.data.frame(split2[i])$vec1),] })
newtest3 <- sapply(1:3, function(i) {
as.data.frame(split2[i])[order((as.data.frame(split2[i]))$vec1),] })
test2
split2
split2
test2
newtest2 <- test2[order(test2$vec3), ]
newtest2 <- test2[order(test2$vec3, test2$vec1),]
newtest2
workingFrame <- data.frame(outData$State, outData$Hospital.Name, resultVector)
workingFrame <- data.frame(outData$State, outData$Hospital.Name, outData[,11])
str(workingFrame)
names(workingFrame) <- c("state", "hospital", "result")
str(workingFrame)
workingFrame$result <- as.numeric(workingFrame$result)
str(workingFrame)
workingFrame <- data.frame(as.character(outData$State), as.character(outData$Hospital.Name), as.numeric(outData[,11]))
workingFrame <- data.frame(as.character(outData$State), as.character(outData$Hospital.Name), as.character(outData[,11])
)
names(workingFrame) <- c("state", "hospital", "result")
str(workingFrame)
workingFrame$state <- as.character(workingFrame$state)
workingFrame$hospital <- as.character(workingFrame$hospital)
workingFrame$result <- as.character(workingFrame$result)
str(workingFrame)
workingFrame$result <- as.numeric(workingFrame$result)
str(workingFrame)
workingSort <- workingFrame[order(workingFrame$state, workingFrame$result),]
str(workingSort)
?split
splitWork <- split(workingSort, as.factor(workingSort$state))
str(splitWork)
head(splitWork)
names(splitWork)
length(names(splitWork))
splitWork <- split(workingSort, as.factor(workingSort$state))
splitWork[5]$hospital[3]
as.data.frame(splitWork$CA)$hospital[3]
hospital <- (names(splitWork), function(i) {}
hospital <- (names(splitWork), function(i) {
hospital <- (names(splitWork), function(i) {
hospital <- sapply(names(splitWork), function(i) {
as.data.frame(splitwork$i)$hospital[3]})
hospital <- sapply(names(splitWork), function(i) {
as.data.frame(splitWork$i)$hospital[3]})
hospital
str(names(splitWork))
str(splitWork[2])
lapply
?lapply
?apply
?lapply
h <- character(1:10)
h <- character(10)
h
source('~/Documents/coursera-R/rprog-data-ProgAssignment3-data/HospitalQualityProject/rankall.R')
source('~/Documents/coursera-R/rprog-data-ProgAssignment3-data/HospitalQualityProject/rankall.R')
rankall("heart failure", 3)
source('~/Documents/coursera-R/rprog-data-ProgAssignment3-data/HospitalQualityProject/rankall.R')
source('~/Documents/coursera-R/rprog-data-ProgAssignment3-data/HospitalQualityProject/rankall.R')
rankall("heart failure", 3)
dataF <- as.data.frame(splitWork[5])
str(dataF)
source('~/Documents/coursera-R/rprog-data-ProgAssignment3-data/HospitalQualityProject/rankall.R')
rankall("heart failure", 3)
source("submitscript3.R")
submit
submit()
submit()
submit()
submit()
submit()
submit()
submit()
